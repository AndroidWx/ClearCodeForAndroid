apply plugin: 'com.android.library'
//dagger2 okhttp
apply plugin: 'com.neenbedankt.android-apt'
//调试RxJava 插件
apply plugin: 'com.fernandocejas.frodo'
//java7支持java8插件
apply plugin: 'me.tatarka.retrolambda'

apply plugin: 'jar-gradle-plugin'
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.3'
    }
}
android {
    //frodo linked{http://blog.csdn.net/allsharps/article/details/50976689}
    defaultPublishConfig "debug"

    //获取整体配置
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
    buildTypes{
        debug{
            buildConfigField "String","BASE_URL","\"http://www.android10.org/\""
        }
        release{
            buildConfigField "String","BASE_URL","\"http://www.android10.org/\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'    // Due to Robolectric that modifies the manifest when running tests
    }
}

//BuildJar{
//    //输出目录
//    outputFileDir= project.buildDir.path+"/jar"
//    //输出原始jar包名
//    outputFileName="test.jar"
//    //输出混淆jar包名
//    outputProguardFileName="test_proguard.jar"
//    //混淆配置
//    proguardConfigFile="proguard-rules.pro"
//    //是否需要默认的混淆配置proguard-android.txt
//    needDefaultProguard=true
//    applyMappingFile="originMapping/mapping.txt"
//    //需要输出jar的包名列表,当此参数为空时，则默认全项目输出,支持多包,如 includePackage=['com/adison/testjarplugin/include','com/adison/testjarplugin/include1'...]
//    includePackage=['com/ninegor/sdk'];//,'retrofit2','okhttp3']
//    //不需要输出jar的jar包列表,如['baidu.jar','baidu1.jar'...]
//    excludeJar=[]
//    //不需要输出jar的类名列表,如['baidu.calss','baidu1.class'...]
//    //'com/ninegor/sdk/NinegorManager.class'
//    excludeClass=[]
//    //不需要输出jar的包名列表,如 excludePackage=['com/adison/testjarplugin/exclude','com/adison/testjarplugin/exclude1'...]
//    excludePackage=['com/ninegor/sdk/net','com/ninegor/sdk/utils']
//}

dependencies {
    def dataDependencies = rootProject.ext.dataDependencies
    def testDependencies = rootProject.ext.dataTestDependencies
    compile project(':basedomain')
    apt dataDependencies.daggerCompiler
    provided dataDependencies.javaxAnnotation
    compile dataDependencies.dagger
    compile dataDependencies.okHttp
    compile dataDependencies.gson
    compile dataDependencies.rxJava
    compile dataDependencies.rxAndroid
    compile dataDependencies.androidAnnotations
    compile dataDependencies.okHttpUrl
    compile dataDependencies.retrofit
    compile dataDependencies.retroGsonConverter
    compile dataDependencies.retroRxAdapter
    compile dataDependencies.logger
    testCompile 'com.monitorjbl:xlsx-streamer:1.0.1'
    testCompile dataDependencies.rxJava
    testCompile testDependencies.junit
    testCompile testDependencies.assertj
    testCompile testDependencies.mockito
    testCompile testDependencies.robolectric
    //    compile files('src/test/libs/crawler4j-4.3.jar')
    compile 'edu.uci.ics:crawler4j:4.3'
    testCompile 'cn.edu.hfut.dmic.webcollector:WebCollector:2.32'
    testCompile 'com.alibaba:dns-cache-manipulator:1.5.1'
    testCompile 'com.google.code.gson:gson:2.3.1'
    testCompile 'org.apache.httpcomponents:httpcore:4.4.6'
}
